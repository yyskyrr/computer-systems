9.虚拟存储器

虚拟存储器是对主存的一个抽象。支持虚拟存储器的处理器通过使用一种叫做虚拟
寻址的间接形式来引用主存。处理器产生一个虚拟地址，在被发送到主存之前，这个地
址被翻译成一个物理地址。从虚拟地址空间到物理地址空间的地址翻译要求硬件和软件
紧密合作。专门的硬件通过 使用页表来翻译虚拟地址，而页表的内容是由操作系统提供
的。
虚拟存储器提供三个重要的功能。
第一，它在主存中自动缓存最近使用的存放磁盘上的虚拟地址空间的内容。
虚拟存储器缓存中的块叫做页。对磁盘上页的引用会触发缺页，缺页将控制转移到操作系
统中的一个缺页处理程序。缺页处理程序将页面从磁盘拷贝到主存缓存，如果必要,
将写回被驱逐的页。
第二，虚拟存储器简化了存储器管理，进而又简化了链接、在进程间共享数据、进程的存储器分配以及程序加载。
最后，虚拟存储器通过在每条页表条目中加入保护位，从而了简化了存储器保护。

地址翻译的过程必须和系统中所有的硬件缓存的操作集成在一起。大多数页表条目
位于L1 高速缓存中，但是一个称为TLB的页表条目的片上高速缓存，通常会消除访问在
L1上的页表条 目的开销。
现代系统通过将虚拟存储器片和磁盘上的文件片关联起来，以初始化虚拟存储器
片，这个过程称为存储器映射。存储器映射为共享数据、创建新的进程以及加载程序提
供了一种高效的机制。应用可以使用mmap函数来手工地创建和删除虚拟地址空间的区
域。然而，大多数程序依赖于动态存储器分配器，例如malloc,它管理虚拟地址空间区
域内一个称为堆的区域。动态存储器分配器是一个感觉像系统级程序的应用级程序，它直
接操作存储器，而无需类型系统的很多帮助。分配器有两种类型。显式分配器要求应用
显式地释放它们的存储器块。隐式分配器（垃圾收 集器）自动释放任何未使用的和不可
达的块。
对于C程序员来说，管理和使用虚拟存储器是一件困难和容易出错的任务。常见的
错误示例包括：间接引用坏指针，读取未初始化的存储器，允许栈缓冲区溢出，假设指
针和它们指向的 对象大小相同，引用指针而木是它所指向的对象，误解指针运算，引用
不存在的变量，以及引起存储器泄漏。